{"version":3,"sources":["pages/Page404/Page404.module.css","components/Header/Header.module.css","store/login/logTypes.ts","hooks/useTypedSelector.ts","store/registration/regTypes.ts","api/api.ts","pages/Login/Login.tsx","store/login/actions.ts","store/registration/actions.ts","pages/Registration/Registration.tsx","pages/EnterNewPassword/EnterNewPassword.tsx","pages/PasswordRecovery/PasswordRecovery.tsx","pages/Profile/Profile.tsx","pages/Page404/Page404.tsx","components/Header/react.svg","components/Header/Header.tsx","App.tsx","store/reducer.ts","store/registration/registration_reducer.ts","store/login/login_reducers.ts","store/store.ts","index.tsx","pages/Login/Login.module.css","pages/Registration/Registration.module.css"],"names":["module","exports","LoginActions","useTypedSelector","useSelector","RegistrationActions","instance","axios","create","baseURL","withCredentials","Login","dispatch","useDispatch","useState","isLogin","setIsLogin","state","login","loading","error","formik","useFormik","initialValues","email","password","validate","values","errors","test","length","onSubmit","body","a","post","res","type","SET_LOGIN_SUCCESS","payload","data","FETCH_LOGIN_ERROR","resetForm","className","s","wrapper","style","minWidth","bodyStyle","display","flexDirection","alignItems","gap","handleSubmit","form","placeholder","name","value","onChange","handleChange","touched","color","to","console","log","shape","htmlType","Registration","isReg","setIsReg","registration","password2","SET_REG_SUCCESS","FETCH_REG_ERROR","EnterNewPassword","PasswordRecovery","Profile","Page404","navigate","useNavigate","onClick","size","Header","SubMenu","Menu","mode","menuWrapper","Item","src","logo","alt","icon","SnippetsOutlined","UserOutlined","SettingOutlined","title","ItemGroup","GithubOutlined","href","target","rel","SolutionOutlined","App","path","element","initialState","initialValue","_id","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","rootReducer","combineReducers","reducer","action","SEND_REG","SEND_LOGIN","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d1d29f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Page404_wrapper__16xt6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuWrapper\":\"Header_menuWrapper__1nbH8\"};","export type FormikErrorType = {\n    email?: string\n    password?: string\n    password2?: string\n}\n\n\nexport enum LoginActions {\n    SEND_LOGIN = 'SEND_LOGIN',\n    SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS',\n    FETCH_LOGIN_ERROR = 'FETCH_LOGIN_ERROR',\n}\n\nexport type LoginBodyType = {\n    email: string\n    password: string\n}\nexport type LoginState = {\n    body: LoginBodyType\n    loading: boolean\n    error?: string\n    _id: string\n    name: string\n    avatar?: string\n    publicCardPacksCount: number\n    created: string\n    updated: string\n    isAdmin: boolean\n    verified: boolean\n    rememberMe: boolean\n}\n\ntype SetLoginAction = {\n    type: LoginActions.SEND_LOGIN\n    payload: LoginBodyType\n}\ntype SetLoginSuccessAction = {\n    type: LoginActions.SET_LOGIN_SUCCESS\n    payload: LoginBodyType\n}\ntype FetchLoginErrorAction = {\n    type: LoginActions.FETCH_LOGIN_ERROR\n    payload: string\n}\n\nexport type LogActions = SetLoginAction | SetLoginSuccessAction | FetchLoginErrorAction\n\n\n\n\n\n\n\n\n\n","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\nimport {RootStateType} from \"../store/store\";\n\n\nexport const useTypedSelector: TypedUseSelectorHook<RootStateType> = useSelector\n\n","export type FormikErrorType = {\n    email?: string\n    password?: string\n    password2?: string\n}\n\n\nexport enum RegistrationActions {\n    SEND_REG = 'REGISTRATION/SEND_REG',\n    SET_REG_SUCCESS = 'REGISTRATION/SET_REG_SUCCESS',\n    FETCH_REG_ERROR = 'REGISTRATION/FETCH_REG_ERROR',\n}\n\nexport type RegBodyType = {\n    email: string\n    password: string\n}\nexport type RegState = {\n    body: RegBodyType\n    loading: boolean\n    error?: string\n}\n\ntype SetRegAction = {\n    type: RegistrationActions.SEND_REG\n    payload: RegBodyType\n}\ntype SetRegSuccessAction = {\n    type: RegistrationActions.SET_REG_SUCCESS\n    payload: RegBodyType\n}\ntype FetchRegErrorAction = {\n    type: RegistrationActions.FETCH_REG_ERROR\n    payload: string\n}\n\nexport type RegActions = SetRegAction | SetRegSuccessAction | FetchRegErrorAction\n\n\n\n\n\n\n\n","import axios from \"axios\";\n\n\nexport const instance = axios.create({\n    baseURL: 'http://localhost:7542/2.0/',\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\n    withCredentials: true,\n})\n","import React, {useState} from 'react';\nimport s from './Login.module.css';\nimport {useDispatch} from \"react-redux\";\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\nimport {useFormik} from \"formik\";\nimport {FormikErrorType} from \"../../store/login/logTypes\";\nimport {Button, Card, Input} from \"antd\";\nimport {Navigate, NavLink} from \"react-router-dom\";\nimport {setLogin} from \"../../store/login/actions\";\n\n\nconst Login = () => {\n    const dispatch = useDispatch()\n    const [isLogin, setIsLogin] = useState(false)\n    const {loading, error} = useTypedSelector(state => state.login)\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.email) {\n                errors.email = 'Login is required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Incorrect email';\n            }\n            if (!values.password) {\n                errors.password = 'Password is required';\n            } else if (values.password.length < 7) {\n                errors.password = 'Password at least 7 characters';\n            }\n            return errors;\n        },\n\n        onSubmit: values => {\n            dispatch(setLogin(values))\n            formik.resetForm()\n            setIsLogin(true)\n        },\n    })\n\n\n    return (\n        <div className={s.wrapper}>\n            <Card\n                style={{minWidth: '413px'}}\n                bodyStyle={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '40px',\n                }}\n            >\n                <h2>IT-Incubator</h2>\n                <p>Sign In</p>\n                <form onSubmit={formik.handleSubmit} className={s.form}>\n                    <Input\n                        placeholder={'Email'}\n                        name={'email'}\n                        value={formik.values.email}\n                        onChange={formik.handleChange}\n                    />\n                    {formik.touched.email && formik.errors.email &&\n                    <div style={{color: 'red'}}>{formik.errors.email}</div>}\n\n                    <Input\n                        placeholder={'Password'}\n                        name={'password'}\n                        type={'password'}\n                        value={formik.values.password}\n                        onChange={formik.handleChange}\n                    />\n                    {formik.touched.password && formik.errors.password &&\n                    <div style={{color: 'red'}}>{formik.errors.password}</div>}\n\n                    {isLogin && <Navigate to={'/profile'}/> && console.log('yes')}\n\n                    <small>Enter your email address and your password for sign in</small>\n                    <Button\n                        shape={'round'}\n                        type={'primary'}\n                        htmlType={'submit'}\n                    >Sign In\n                    </Button>\n                </form>\n                {loading && <h4>Loading...</h4>}\n                {error && <h4>{error}</h4>}\n\n                <p><NavLink to={'/login'}>Try logging in</NavLink></p>\n            </Card>\n        </div>\n    );\n\n\n};\n\n\nexport default Login;","import {LogActions, LoginActions, LoginBodyType} from \"./logTypes\";\nimport {Dispatch} from \"redux\";\nimport {instance} from \"../../api/api\";\n\n\nexport const setLogin = (body: LoginBodyType) => async (dispatch: Dispatch<LogActions>) => {\n    try {\n        const res = await instance.post(`auth/login`, body)\n        dispatch({type: LoginActions.SET_LOGIN_SUCCESS, payload: res.data})\n    } catch (e) {\n        dispatch({type: LoginActions.FETCH_LOGIN_ERROR, payload: 'Login or pass error'})\n    }\n}\n\n\n\n\n","import {Dispatch} from \"redux\";\nimport {RegActions, RegBodyType, RegistrationActions} from \"./regTypes\";\nimport {instance} from \"../../api/api\";\n\n\nexport const setReg = (body:RegBodyType) => {\n    return async (dispatch: Dispatch<RegActions>) => {\n        try {\n            const res = await instance.post(`auth/register`, body)\n            dispatch({type: RegistrationActions.SET_REG_SUCCESS, payload: res.data})\n        } catch (e) {\n            dispatch({type: RegistrationActions.FETCH_REG_ERROR, payload: 'Error with registration'})\n        }\n    }\n}\n\n","import React, {useState} from 'react';\nimport s from './Registration.module.css';\nimport {Button, Card, Input} from 'antd';\nimport {Navigate, NavLink} from \"react-router-dom\";\nimport {useFormik} from \"formik\";\nimport {FormikErrorType} from \"../../store/registration/regTypes\";\nimport {useDispatch} from \"react-redux\";\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\nimport {setReg} from \"../../store/registration/actions\";\n\n\nconst Registration = () => {\n    const dispatch = useDispatch()\n    const [isReg, setIsReg] = useState(false)\n    const {loading, error} = useTypedSelector(state => state.registration)\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            password2: '',\n        },\n        validate: (values) => {\n            const errors: FormikErrorType = {};\n            if (!values.email) {\n                errors.email = 'Login is required!';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Incorrect email';\n            }\n            if (!values.password) {\n                errors.password = 'Password is required!';\n            } else if (values.password.length < 7) {\n                errors.password = 'Password at least 7 characters';\n            }\n            if (values.password !== values.password2) {\n                errors.password = 'Password mismatch'\n            }\n            return errors;\n        },\n\n        onSubmit: values => {\n            dispatch(setReg(values))\n            formik.resetForm()\n            setIsReg(true)\n        },\n    })\n\n\n    return (\n        <div className={s.wrapper}>\n            <Card\n                style={{minWidth: '413px'}}\n                bodyStyle={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '40px',\n                }}\n            >\n                <h2>IT-Incubator</h2>\n                <p>Sign Up</p>\n                <form onSubmit={formik.handleSubmit} className={s.form}>\n                    <Input\n                        placeholder={'Email'}\n                        name={'email'}\n                        value={formik.values.email}\n                        onChange={formik.handleChange}\n                    />\n                    {formik.touched.email && formik.errors.email &&\n                    <div style={{color: 'red'}}>{formik.errors.email}</div>}\n                    {/*   1   */}\n                    <Input\n                        placeholder={'Password'}\n                        name={'password'}\n                        type={'password'}\n                        value={formik.values.password}\n                        onChange={formik.handleChange}\n                    />\n                    {formik.touched.password && formik.errors.password &&\n                    <div style={{color: 'red'}}>{formik.errors.password}</div>}\n                    {/*   2   */}\n                    <Input\n                        placeholder={'Password'}\n                        name={'password2'}\n                        type={\"password\"}\n                        value={formik.values.password2}\n                        onChange={formik.handleChange}\n                    />\n                    {formik.touched.password2 && formik.errors.password2 &&\n                    <div style={{color: 'red'}}>{formik.errors.password2}</div>}\n\n                    {isReg && <Navigate to=\"/login\"/>}\n\n                    <small>Enter your email address and your password for sign up</small>\n                    <Button\n                        shape={'round'}\n                        type={'primary'}\n                        htmlType={'submit'}\n                    >Sign Up\n                    </Button>\n                </form>\n                {loading && <h3>Loading...</h3>}\n                {error && <h4>{error}</h4>}\n\n                <p><NavLink to={'/login'}>Try logging in</NavLink></p>\n            </Card>\n        </div>\n    );\n};\n\nexport default Registration;\n","import React from 'react';\n\nconst EnterNewPassword = () => {\n    return (\n        <div>\n            Enter new password\n        </div>\n    );\n};\n\nexport default EnterNewPassword;","import React from 'react';\n\nconst PasswordRecovery = () => {\n    return (\n        <div>\n            Password recovery\n        </div>\n    );\n};\n\nexport default PasswordRecovery;","import React from 'react';\n\nconst Profile = () => {\n    return (\n        <div>\n            Profile\n        </div>\n    );\n};\n\nexport default Profile;","import React from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport s from './Page404.module.css';\nimport {Button} from \"antd\";\n\n\nconst Page404 = () => {\n    let navigate = useNavigate();\n\n    return (\n        <div className={s.wrapper}>\n            <h2>404: Page not found <i>😕</i></h2>\n            <Button\n                onClick={() => navigate(-1)}\n                shape={'round'}\n                size={\"large\"}\n                type={'primary'}\n            >Back\n            </Button>\n        </div>\n    );\n};\n\n\nexport default Page404;","export default __webpack_public_path__ + \"static/media/react.4c89d1c3.svg\";","import React from 'react';\nimport s from './Header.module.css';\nimport {Menu} from 'antd';\nimport {SettingOutlined, UserOutlined, SnippetsOutlined, SolutionOutlined} from '@ant-design/icons';\nimport {GithubOutlined} from \"@ant-design/icons\";\nimport logo from './react.svg';\nimport {useNavigate} from \"react-router-dom\";\n\n\nconst Header = () => {\n    const {SubMenu} = Menu;\n    let navigate = useNavigate();\n\n\n    return (\n        <Menu mode=\"horizontal\" className={s.menuWrapper}>\n            <Menu.Item><img src={logo} alt={'react'}/></Menu.Item>\n            <Menu.Item icon={<SnippetsOutlined/>}>Packs list</Menu.Item>\n            <Menu.Item icon={<UserOutlined/>}>Profile</Menu.Item>\n\n            <SubMenu key=\"SubMenu\" icon={<SettingOutlined/>} title=\"Developers\">\n                <Menu.ItemGroup>\n                    <Menu.Item>Игнат Закалинский</Menu.Item>\n                    <Menu.Item icon={<GithubOutlined/>}>\n                        <a href=\"https://github.com/iForced\" target=\"_blank\" rel=\"noopener noreferrer\">Илья Орсич</a>\n                    </Menu.Item>\n                    <Menu.Item icon={<GithubOutlined/>}>\n                        <a href=\"https://github.com/MitPalVach\" target=\"_blank\" rel=\"noopener noreferrer\">Дмитрий Вачугов</a>\n                    </Menu.Item>\n                    <Menu.Item icon={<GithubOutlined/>}>\n                        <a href=\"https://github.com/NepoGostu\" target=\"_blank\" rel=\"noopener noreferrer\">Андрей Зуев</a>\n                    </Menu.Item>\n                </Menu.ItemGroup>\n            </SubMenu>\n            <SubMenu key=\"SubMenu1\" icon={<SolutionOutlined/>} title=\"Authorization\">\n                <Menu.ItemGroup>\n                    <Menu.Item  icon={<SolutionOutlined/>} onClick={()=> navigate('/login')}>Sign in</Menu.Item>\n                    <Menu.Item icon={<SolutionOutlined/>} onClick={()=> navigate('/registration')}>Sign up</Menu.Item>\n                    <Menu.Item  icon={<SolutionOutlined/>} onClick={()=> navigate('/login')}>Sign out</Menu.Item>\n                </Menu.ItemGroup>\n            </SubMenu>\n        </Menu>\n\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport {Route, Routes} from \"react-router-dom\";\nimport Login from \"./pages/Login/Login\";\nimport Registration from \"./pages/Registration/Registration\";\nimport EnterNewPassword from \"./pages/EnterNewPassword/EnterNewPassword\";\nimport PasswordRecovery from \"./pages/PasswordRecovery/PasswordRecovery\";\nimport Profile from \"./pages/Profile/Profile\";\nimport Page404 from \"./pages/Page404/Page404\";\nimport Header from \"./components/Header/Header\";\n\n\nconst App = () => {\n    return (\n        <div>\n            <Header/>\n            <Routes>\n                <Route path={'/login'} element={<Login/>}/>\n                <Route path={'/registration'} element={<Registration/>}/>\n                <Route path={'/enterpassword'} element={<EnterNewPassword/>}/>\n                <Route path={'/recoverypassword'} element={<PasswordRecovery/>}/>\n                <Route path={'/profile'} element={<Profile/>}/>\n                <Route path={'/*'} element={<Page404/>}/>\n            </Routes>\n        </div>\n    );\n};\n\nexport default App;","\ntype InitialStateType = {}\n\nconst initialState: InitialStateType = {}\n\nexport const reducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\n    switch (action.type) {\n        default:\n            return state\n    }\n}","import {RegActions, RegistrationActions, RegState} from \"./regTypes\";\n\n\nconst initialValue: RegState = {\n    body: {email: '', password: ''},\n    loading: false,\n    error: '',\n}\n\nexport const regReducer = (state = initialValue, action: RegActions): RegState => {\n    switch (action.type) {\n        case RegistrationActions.SEND_REG: {\n            return {...state, loading: true, error: '', body: action.payload}\n        }\n        case RegistrationActions.SET_REG_SUCCESS: {\n            return {...state, loading: false, error: '', body: action.payload}\n        }\n        case RegistrationActions.FETCH_REG_ERROR: {\n            return {...state, loading: false, error: action.payload}\n        }\n        default:\n            return state\n    }\n}\n","import {LogActions, LoginActions, LoginState} from \"./logTypes\";\n\n\nconst initialValue: LoginState = {\n    body: {email: '', password: ''},\n    loading: false,\n    error: '',\n    _id: '',\n    name: '',\n    avatar: '',\n    publicCardPacksCount: 0,\n    created: '',\n    updated: '',\n    isAdmin: false,\n    verified: false,\n    rememberMe: false,\n}\n\nexport const loginReducer = (state = initialValue, action: LogActions): LoginState => {\n    switch (action.type) {\n        case LoginActions.SEND_LOGIN: {\n            return {...state, loading: true, error: '', body: action.payload}\n        }\n        case LoginActions.SET_LOGIN_SUCCESS: {\n            return {...state, loading: false, error: '', body: action.payload}\n        }\n        case LoginActions.FETCH_LOGIN_ERROR: {\n            return {...state, loading: false, error: action.payload}\n        }\n        default:\n            return state\n    }\n}\n\n\n\n\n\n\n\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {reducer} from \"./reducer\";\nimport thunk from \"redux-thunk\";\nimport {regReducer} from \"./registration/registration_reducer\";\nimport {loginReducer} from \"./login/login_reducers\";\n\n\nconst rootReducer = combineReducers({\n    reducer,\n    registration: regReducer,\n    login: loginReducer,\n})\n\nexport type RootStateType = ReturnType<typeof rootReducer>\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__2q6j0\",\"form\":\"Login_form__3bufY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Registration_wrapper__2cRI7\",\"form\":\"Registration_form__2b5sZ\"};"],"sourceRoot":""}